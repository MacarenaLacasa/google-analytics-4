config {
  type: "table",
  schema: "staging",
  description: "Type of user - new or returning",
}

SELECT
    parse_date('%Y%m%d',event_date) as event_date,
    -- user type
    case
        when (
                select value.int_value
                from unnest(event_params)
                where event_name = 'session_start'
                    and key = 'ga_session_number'
            ) = 1
        then 'New User'
        when (
                select value.int_value
                from unnest(event_params)
                where event_name = 'session_start'
                    and key = 'ga_session_number'
            ) > 1
        then 'Returning User'
        else null
    end as user_type,
    -- count of users
    count(distinct user_pseudo_id) as users,
    -- count of session
    count(
        distinct concat(
            user_pseudo_id,
            (
                select value.int_value
                from unnest(event_params)
                where key = 'ga_session_id'
            )
        )
    ) as sessions,
    -- bounce rate
    safe_divide(
        count(
            distinct concat(
                user_pseudo_id,
                (
                    select value.int_value
                    from unnest(event_params)
                    where key = 'ga_session_id'
                )
            )
        ) - 
        count(
            distinct case
                        when (
                            select value.string_value
                            from unnest(event_params)
                            where key = 'session_engaged'
                        ) = '1'
                        then concat(
                            user_pseudo_id,
                            (
                                select value.int_value
                                from unnest(event_params)
                                where key = 'ga_session_id'
                            )
                        )
                        else null
                    end
        ),
        count(
            distinct concat(
                    user_pseudo_id,
                    (
                        select value.int_value
                        from unnest(event_params)
                        where key = 'ga_session_id'
                    )
                )
        )
    ) as bounce_rate,
    -- engagement time
    safe_divide(
        sum(
            max(
                (   
                    select value.int_value
                    from unnest(event_params)
                    where key = 'engagement_time_msec'
                )
            ) / 1000
        ),
        count(
            distinct case
                        when (
                                max(
                                    (
                                        select value.string_value
                                        from unnest(event_params)
                                        where key = 'session_engaged'
                                    )
                                )
                        ) = '1'
                        then concat(
                            user_pseudo_id,
                            (
                                select value.int_value
                                from unnest(event_params)
                                where key = 'ga_session_id'
                            )
                        )
                        else null
                    end
        )
    ) as engagement_time
from
    ${ref("events_*")}
group by
    event_date,
    user_type
having
    user_type is not null
order by 
    event_date

